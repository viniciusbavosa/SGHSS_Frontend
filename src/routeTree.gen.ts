/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ErrorRouteImport } from './routes/error'
import { Route as AcessoNegadoRouteImport } from './routes/acesso-negado'
import { Route as AppRouteRouteImport } from './routes/_app/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DoctorDashboardRouteImport } from './routes/doctor/dashboard'
import { Route as AdminDashboardRouteImport } from './routes/admin/dashboard'
import { Route as AppTeleconsultasRouteImport } from './routes/_app/teleconsultas'
import { Route as AppHistoricoMedicoRouteImport } from './routes/_app/historico-medico'
import { Route as AppExamesRouteImport } from './routes/_app/exames'
import { Route as AppDashboardRouteImport } from './routes/_app/dashboard'
import { Route as AppConsultasRouteImport } from './routes/_app/consultas'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ErrorRoute = ErrorRouteImport.update({
  id: '/error',
  path: '/error',
  getParentRoute: () => rootRouteImport,
} as any)
const AcessoNegadoRoute = AcessoNegadoRouteImport.update({
  id: '/acesso-negado',
  path: '/acesso-negado',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DoctorDashboardRoute = DoctorDashboardRouteImport.update({
  id: '/doctor/dashboard',
  path: '/doctor/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminDashboardRoute = AdminDashboardRouteImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AppTeleconsultasRoute = AppTeleconsultasRouteImport.update({
  id: '/teleconsultas',
  path: '/teleconsultas',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppHistoricoMedicoRoute = AppHistoricoMedicoRouteImport.update({
  id: '/historico-medico',
  path: '/historico-medico',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppExamesRoute = AppExamesRouteImport.update({
  id: '/exames',
  path: '/exames',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppDashboardRoute = AppDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppConsultasRoute = AppConsultasRouteImport.update({
  id: '/consultas',
  path: '/consultas',
  getParentRoute: () => AppRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/acesso-negado': typeof AcessoNegadoRoute
  '/error': typeof ErrorRoute
  '/login': typeof LoginRoute
  '/consultas': typeof AppConsultasRoute
  '/dashboard': typeof AppDashboardRoute
  '/exames': typeof AppExamesRoute
  '/historico-medico': typeof AppHistoricoMedicoRoute
  '/teleconsultas': typeof AppTeleconsultasRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/doctor/dashboard': typeof DoctorDashboardRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/acesso-negado': typeof AcessoNegadoRoute
  '/error': typeof ErrorRoute
  '/login': typeof LoginRoute
  '/consultas': typeof AppConsultasRoute
  '/dashboard': typeof AppDashboardRoute
  '/exames': typeof AppExamesRoute
  '/historico-medico': typeof AppHistoricoMedicoRoute
  '/teleconsultas': typeof AppTeleconsultasRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/doctor/dashboard': typeof DoctorDashboardRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/acesso-negado': typeof AcessoNegadoRoute
  '/error': typeof ErrorRoute
  '/login': typeof LoginRoute
  '/_app/consultas': typeof AppConsultasRoute
  '/_app/dashboard': typeof AppDashboardRoute
  '/_app/exames': typeof AppExamesRoute
  '/_app/historico-medico': typeof AppHistoricoMedicoRoute
  '/_app/teleconsultas': typeof AppTeleconsultasRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/doctor/dashboard': typeof DoctorDashboardRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/acesso-negado'
    | '/error'
    | '/login'
    | '/consultas'
    | '/dashboard'
    | '/exames'
    | '/historico-medico'
    | '/teleconsultas'
    | '/admin/dashboard'
    | '/doctor/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/acesso-negado'
    | '/error'
    | '/login'
    | '/consultas'
    | '/dashboard'
    | '/exames'
    | '/historico-medico'
    | '/teleconsultas'
    | '/admin/dashboard'
    | '/doctor/dashboard'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/acesso-negado'
    | '/error'
    | '/login'
    | '/_app/consultas'
    | '/_app/dashboard'
    | '/_app/exames'
    | '/_app/historico-medico'
    | '/_app/teleconsultas'
    | '/admin/dashboard'
    | '/doctor/dashboard'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  AcessoNegadoRoute: typeof AcessoNegadoRoute
  ErrorRoute: typeof ErrorRoute
  LoginRoute: typeof LoginRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  DoctorDashboardRoute: typeof DoctorDashboardRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/error': {
      id: '/error'
      path: '/error'
      fullPath: '/error'
      preLoaderRoute: typeof ErrorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/acesso-negado': {
      id: '/acesso-negado'
      path: '/acesso-negado'
      fullPath: '/acesso-negado'
      preLoaderRoute: typeof AcessoNegadoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/doctor/dashboard': {
      id: '/doctor/dashboard'
      path: '/doctor/dashboard'
      fullPath: '/doctor/dashboard'
      preLoaderRoute: typeof DoctorDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/teleconsultas': {
      id: '/_app/teleconsultas'
      path: '/teleconsultas'
      fullPath: '/teleconsultas'
      preLoaderRoute: typeof AppTeleconsultasRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/historico-medico': {
      id: '/_app/historico-medico'
      path: '/historico-medico'
      fullPath: '/historico-medico'
      preLoaderRoute: typeof AppHistoricoMedicoRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/exames': {
      id: '/_app/exames'
      path: '/exames'
      fullPath: '/exames'
      preLoaderRoute: typeof AppExamesRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/consultas': {
      id: '/_app/consultas'
      path: '/consultas'
      fullPath: '/consultas'
      preLoaderRoute: typeof AppConsultasRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AppRouteRouteChildren {
  AppConsultasRoute: typeof AppConsultasRoute
  AppDashboardRoute: typeof AppDashboardRoute
  AppExamesRoute: typeof AppExamesRoute
  AppHistoricoMedicoRoute: typeof AppHistoricoMedicoRoute
  AppTeleconsultasRoute: typeof AppTeleconsultasRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppConsultasRoute: AppConsultasRoute,
  AppDashboardRoute: AppDashboardRoute,
  AppExamesRoute: AppExamesRoute,
  AppHistoricoMedicoRoute: AppHistoricoMedicoRoute,
  AppTeleconsultasRoute: AppTeleconsultasRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  AcessoNegadoRoute: AcessoNegadoRoute,
  ErrorRoute: ErrorRoute,
  LoginRoute: LoginRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  DoctorDashboardRoute: DoctorDashboardRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
